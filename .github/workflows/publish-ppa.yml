name: Publish to Launchpad PPA
on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-20.04
    environment: launchpad
    steps:
      - uses: actions/checkout@v4

      - name: Install Debuild
        run: sudo apt install -y devscripts
     
      - name: Set build output dir
        id: strings
        shell: bash
        run: |
          echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"
          echo "version=0.0.3" >> "$GITHUB_OUTPUT"
          echo "build=1" >> "$GITHUB_OUTPUT"

      - name: Configure CMake
        run: >
          cmake -B ${{ steps.strings.outputs.build-output-dir }} -S ${{ github.workspace }}
          -DCMAKE_CXX_COMPILER=clang++
          -DCMAKE_C_COMPILER=clang
          -DCMAKE_BUILD_TYPE=Release
          -DIPADDRESS_BUILD_TESTS=OFF
          -DIPADDRESS_BUILD_DOC=OFF
          -DIPADDRESS_BUILD_PACKAGES=ON
          -DIPADDRESS_BUILD_DEB_PACKAGE=ON
          -DIPADDRESS_BUILD_RPM_PACKAGE=OFF

      - name: Build
        run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config Release
        
      - name: Pack Deb
        run: cpack --config ${{ steps.strings.outputs.build-output-dir }}/CPackConfig.cmake

      - name: Add source code
        run: |
          mkdir -p ${{ steps.strings.outputs.build-output-dir }}/ppa
          mkdir -p ${{ steps.strings.outputs.build-output-dir }}/ppa/ipaddress-${{ steps.strings.outputs.version }}
          mkdir -p ${{ steps.strings.outputs.build-output-dir }}/ppa/ipaddress-${{ steps.strings.outputs.version }}/debian
          mkdir -p ${{ steps.strings.outputs.build-output-dir }}/ppa/ipaddress-${{ steps.strings.outputs.version }}/debian/source
          cp _CPack_Packages/Linux/DEB/ipaddress-${{ steps.strings.outputs.version }}/data.tar.gz ${{ steps.strings.outputs.build-output-dir }}/ppa/ipaddress_${{ steps.strings.outputs.version }}.orig.tar.gz
          cp -r _CPack_Packages/Linux/DEB/ipaddress-${{ steps.strings.outputs.version }}/usr ${{ steps.strings.outputs.build-output-dir }}/ppa/ipaddress_${{ steps.strings.outputs.version }}/debian/

      - name: Add debian/rules
        run: |
          printf "#!/usr/bin/make -f
           
          %%:
          	dh \$@
          " >  ${{ steps.strings.outputs.build-output-dir }}/ppa/ipaddress-${{ steps.strings.outputs.version }}/debian/rules

      - name: Add changelog
        env:
            PPA_BUILD: ${{ vars.PPA_BUILD }}
        run: |
          printf "ipaddress (${{ steps.strings.outputs.version }}-$PPA_BUILD) focal; urgency=low
           
            * Release ${{ steps.strings.outputs.version }}
           
           -- Vladimir Shaleev <vladimirshaleev@gmail.com>  " >  ${{ steps.strings.outputs.build-output-dir }}/ppa/ipaddress-${{ steps.strings.outputs.version }}/debian/changelog
          date +"%a, %d %b %Y %H:%M:%S %z" >>  ${{ steps.strings.outputs.build-output-dir }}/ppa/ipaddress-${{ steps.strings.outputs.version }}/debian/changelog

      - name: Add debian/compat and debian/format
        run: |
          echo 10 >  ${{ steps.strings.outputs.build-output-dir }}/ppa/ipaddress-${{ steps.strings.outputs.version }}/debian/compat
          echo "3.0 (quilt)" >  ${{ steps.strings.outputs.build-output-dir }}/ppa/ipaddress-${{ steps.strings.outputs.version }}/debian/source/format

      - name: Add debian/control
        run: |
          printf "Source: ipaddress
          Section: devel
          Priority: optional
          Maintainer: Vladimir Shaleev <vladimirshaleev@gmail.com>
          Standards-Version: 4.5.0
          Build-Depends: debhelper (>= 10)
           
          Package: libipaddress-dev
          Depends: \${misc:Depends}
          Architecture: all
          Homepage: https://github.com/VladimirShaleev/ipaddress
          Description: A library for working and manipulating IPv4/IPv6 addresses and networks
           
           
          " >  ${{ steps.strings.outputs.build-output-dir }}/ppa/ipaddress-${{ steps.strings.outputs.version }}/debian/control
      - name: Add copyright
        run: printf "stup" > ${{ steps.strings.outputs.build-output-dir }}/ppa/ipaddress-${{ steps.strings.outputs.version }}/debian/copyright

      - name: test
        run: |
          cat  ${{ steps.strings.outputs.build-output-dir }}/ppa/ipaddress-${{ steps.strings.outputs.version }}/debian/rules
          cat  ${{ steps.strings.outputs.build-output-dir }}/ppa/ipaddress-${{ steps.strings.outputs.version }}/debian/compat
          cat  ${{ steps.strings.outputs.build-output-dir }}/ppa/ipaddress-${{ steps.strings.outputs.version }}/debian/source/format
          cat  ${{ steps.strings.outputs.build-output-dir }}/ppa/ipaddress-${{ steps.strings.outputs.version }}/debian/changelog
          cat  ${{ steps.strings.outputs.build-output-dir }}/ppa/ipaddress-${{ steps.strings.outputs.version }}/debian/control
  
      - name: Debuild
        env:
          PPA_BUILD: ${{ vars.PPA_BUILD }}
          PUBLIC_KEY: ${{ vars.PUBLIC_KEY }}
        run: |
          cd ${{ steps.strings.outputs.build-output-dir }}/ppa/ipaddress-${{ steps.strings.outputs.version }}
          debuild -S -sa -us -uc
          cd ${{ steps.strings.outputs.build-output-dir }}/ppa
          debsign -p'gpg --passphrase "${{ secrets.LAUNCHPAD_PASSWORD }}" --batch --pinentry-mode loopback' -S -k$PUBLIC_KEY ipaddress_${{ steps.strings.outputs.version }}-$PPA_BUILD_source.changes
